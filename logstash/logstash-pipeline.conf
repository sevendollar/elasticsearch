# /usr/share/logstash/pipeline/logstash.conf
# PANOS v7.1


input {
  udp {
    port => 1514
  }
}

filter {
  grok {
    match => { "message" => "(.*?,){3}%{DATA:x_kind},.*?" }
  }
  if [x_kind] == "TRAFFIC" {
    grok { match => { "message" => "%{DATA:future_use},%{DATA:receive_time},%{NUMBER:serial_number:int},%{DATA:type},%{DATA:threat/content_type},%{DATA:future_use},%{DATA:generated_time},%{DATA:source_ip},%{DATA:destination_ip},%{DATA:nat_source_ip},%{DATA:nat_destination_ip},%{DATA:rule_name},%{DATA:source_user},%{DATA:destination_user},%{DATA:application},%{DATA:virtual_system},%{DATA:source_zone},%{DATA:destination_zone},%{DATA:inbound_interface},%{DATA:outbound_interface},%{DATA:log_action},%{DATA:future_use},%{DATA:session_id},%{DATA:repeat_count},%{DATA:source_port},%{DATA:destination_port},%{DATA:nat_source_port},%{DATA:nat_destination_port},%{DATA:flags},%{DATA:protocol},%{DATA:action},%{DATA:bytes},%{DATA:bytes_sent},%{DATA:bytes_received},%{DATA:packets},%{DATA:start_time},%{DATA:elapsed_time},%{DATA:category},%{DATA:future_use},%{DATA:sequence_number},%{DATA:action_flags},%{DATA:source_location},%{DATA:destination_location},%{DATA:future_use},%{DATA:packets_sent},%{DATA:packets_received},%{DATA:session_end_reason},%{DATA:device_group_hierarchy_level_1},%{DATA:device_group_hierarchy_level_2},%{DATA:device_group_hierarchy_level_3},%{DATA:device_group_hierarchy_level_4},%{DATA:virtual_system_name},%{DATA:device_name},%{DATA:action_source}" }}
  } else if [x_kind] == "SYSTEM" {
    grok { match => { "message" => "%{DATA:future_use},%{DATA:receive_time},%{DATA:serial_number},%{DATA:type},%{DATA:content/threat_type},%{DATA:future_use},%{DATA:generated_time},%{DATA:virtual_system},%{DATA:event_id},%{DATA:object},%{DATA:future_use},%{DATA:future_use},%{DATA:module},%{DATA:severity},%{DATA:description},%{DATA:sequence_number},%{DATA:action_flags},%{DATA:device_group_hierarchy_level_1},%{DATA:device_group_hierarchy_level_2},%{DATA:device_group_hierarchy_level_3},%{DATA:device_group_hierarchy_level_4},%{DATA:virtual_system_name},%{DATA:device_name}" }}
  } else if [x_kind] == "THREAT" {
    grok { match => { "message" => "%{DATA:future_use},%{DATA:receive_time},%{DATA:serial_number},%{DATA:type},%{DATA:subtype},%{DATA:future_use},%{DATA:generated_time},%{DATA:source_ip},%{DATA:destination_ip},%{DATA:nat_source_ip},%{DATA:nat_destination_ip},%{DATA:rule_name},%{DATA:source_user},%{DATA:destination_user},%{DATA:application},%{DATA:virtual_system},%{DATA:source_zone},%{DATA:destination_zone},%{DATA:ingress_interface},%{DATA:egress_interface},%{DATA:log_forwarding_profile},%{DATA:future_use},%{DATA:session_id},%{DATA:repeat_count},%{DATA:source_port},%{DATA:destination_port},%{DATA:nat_source_port},%{DATA:nat_destination_port},%{DATA:flags},%{DATA:protocol},%{DATA:action},%{DATA:miscellaneous},%{DATA:threat_id},%{DATA:category},%{DATA:severity},%{DATA:direction},%{DATA:sequence_number},%{DATA:action_flags},%{DATA:source_location},%{DATA:destination_location},%{DATA:future_use},%{DATA:content_type},%{DATA:pcap_id},%{DATA:filedigest},%{DATA:cloud},%{DATA:url_index},%{DATA:user_agent},%{DATA:file_type},%{DATA:x-forwarded-for},%{DATA:referer},%{DATA:sender},%{DATA:subject},%{DATA:recipient},%{DATA:report_id},%{DATA:device_group_hierarchy_level_1},%{DATA:device_group_hierarchy_level_2},%{DATA:device_group_hierarchy_level_3},%{DATA:device_group_hierarchy_level_4},%{DATA:virtual_system_name},%{DATA:device_name},%{DATA:future_use}" }}
  } else if [x_kind] == "CONFIG" {
    grok { match => { "message" => "%{DATA:future_use},%{DATA:receive_time},%{DATA:serial_number},%{DATA:type},%{DATA:subtype},%{DATA:future_use},%{DATA:generated_time},%{DATA:host},%{DATA:virtual_system},%{DATA:command},%{DATA:admin},%{DATA:client},%{DATA:result},%{DATA:configuration_path},%{DATA:sequence_number},%{DATA:action_flags},%{DATA:device_group_hierarchy_level_1},%{DATA:device_group_hierarchy_level_2},%{DATA:device_group_hierarchy_level_3},%{DATA:device_group_hierarchy_level_4},%{DATA:virtual_system_name},%{DATA:device_name}" }}
  }
  mutate { remove_field => [ "x_kind", "future_use"] }
}

output {
  stdout {
    codec => rubydebug
  }
  mongodb {
    uri => "mongodb://jef:mongopw@10.7.12.65"
    database => "jef_db"
    collection => "jef_col"
  }
}
