version: '2.2'

services:

  es1:
    container_name: es1
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
    environment:
      - CERTS_DIR=${CERTS_DIR}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - "ES_JAVA_OPTS=-Xms16g -Xmx16g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nproc:
        soft: 65536
        hard: 65536
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ${PWD}/es1/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - es1:/usr/share/elasticsearch/data
      - certs:${CERTS_DIR}
    ports:
      - 9201:9200
    restart: unless-stopped
    healthcheck:
      test: curl --cacert ${CERTS_DIR}/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5


  es2:
    container_name: es2
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
    environment:
      - CERTS_DIR=${CERTS_DIR}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - "ES_JAVA_OPTS=-Xms16g -Xmx16g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nproc:
        soft: 65536
        hard: 65536
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ${PWD}/es2/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - es2:/usr/share/elasticsearch/data
      - certs:${CERTS_DIR}
    ports:
      - 9202:9200
    restart: unless-stopped


  es3:
    container_name: es3
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
    environment:
      - CERTS_DIR=${CERTS_DIR}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - "ES_JAVA_OPTS=-Xms16g -Xmx16g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nproc:
        soft: 65536
        hard: 65536
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ${PWD}/es3/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - es3:/usr/share/elasticsearch/data
      - certs:${CERTS_DIR}
    ports:
      - 9203:9200
    restart: unless-stopped


  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.3.0
    environment:
      - CERTS_DIR=${CERTS_DIR}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - ${PWD}/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
      - certs:${CERTS_DIR}
    ports:
      - 5601:5601
    depends_on:
      - es1
      - es2
      - es3
    restart: unless-stopped


  wait_until_ready:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
    command: /usr/bin/true
    depends_on: {"es1": {"condition": "service_healthy"}}


  logstash:
    container_name: logstash
    build: logstash/.
    environment:
      - CERTS_DIR=${CERTS_DIR}
      - "LS_JAVA_OPTS=-Xms4g -Xmx4g"
    depends_on:
      - es1
      - es2
      - es3
    volumes:
      - ${PWD}/logstash/logstash-pipeline.conf:/usr/share/logstash/pipeline/logstash.conf
      - ${PWD}/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - certs:${CERTS_DIR}
    ports:
      - "1514:1514/udp"
    restart: unless-stopped


  mongo:
    container_name: mongo
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - 27017:27017
    restart: unless-stopped


volumes:
  es1:
  es2:
  es3:
  certs:
